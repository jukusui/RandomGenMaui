<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Jukusui.RandomGen.View.PasswordPage"
             xmlns:local="clr-namespace:Jukusui.RandomGen.View.Control"
             xmlns:util="clr-namespace:Jukusui.RandomGen.Util"
             xmlns:v="clr-namespace:Jukusui.RandomGen.View"
             xmlns:vm="clr-namespace:Jukusui.RandomGen.ViewModel"
             xmlns:prop="clr-namespace:Jukusui.RandomGen.Properties"
             Title="{x:Static prop:Resources.TabName_Password}" util:ToastManager.Text="{Binding ErrorText}">
    <ContentPage.BindingContext>
        <vm:PasswordViewModel x:Name="viewModel"/>
    </ContentPage.BindingContext>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
            <VisualState Name="Narrow">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="0"/>
                </VisualState.StateTriggers>
                
            </VisualState>
            <VisualState Name="Wide">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="500"/>
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter TargetName="LengthInput" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="LengthInput" Property="Grid.RowSpan" Value="2"/>
                    <Setter TargetName="RoleButtons" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="RoleButtons" Property="Grid.Column" Value="1"/>
                    <Setter TargetName="RoleButtons" Property="Grid.Row" Value="1"/>
                    <Setter TargetName="RoleButtons" Property="Grid.RowSpan" Value="2"/>
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <ContentPage.Resources>
        <Style TargetType="Grid" Class="FlexG">
            <Setter Property="Margin" Value="4,8,4,4"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style TargetType="local:LabeledCheckBox" Class="Flex">
            <Setter Property="Margin" Value="4,8,4,4"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style TargetType="local:LabeledCheckBox" Class="Wide">
            <Setter Property="WidthRequest" Value="120"/>
        </Style>
        <Style TargetType="local:LabeledCheckBox" Class="Narrow">
            <Setter Property="WidthRequest" Value="72"/>
        </Style>
    </ContentPage.Resources>
    <Grid VerticalOptions="Fill" Margin="16" RowSpacing="16" ColumnSpacing="24">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <FlexLayout Grid.ColumnSpan="2" Padding="-8,-16,-8,4" Wrap="Wrap">
            <local:LabeledCheckBox StyleClass="Flex,Wide" Label="{Binding ChUpper.Title}" IsChecked="{Binding ChUpper.Flag}"/>
            <local:LabeledCheckBox StyleClass="Flex,Wide" Label="{Binding ChLower.Title}" IsChecked="{Binding ChLower.Flag}"/>
            <local:LabeledCheckBox StyleClass="Flex,Wide" Label="{Binding ChNumber.Title}" IsChecked="{Binding ChNumber.Flag}"/>
            <Grid StyleClass="FlexG">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <local:LabeledCheckBox StyleClass="Wide" Label="{Binding ChSymbol.Title}" HorizontalOptions="Start"
                               IsChecked="{Binding ChSymbol.Flag}"/>
                <Button Style="{StaticResource SecondaryButton}" Grid.Column="1" Clicked="OnSymbolBorderClicked" VerticalOptions="Center"
                        Text="&#xE145;" FontFamily="MaterialIconsRegular"
                        FontSize="Title" Padding="-22"/>
                <!--<ImageButton Grid.Column="1" Clicked="OnSymbolBorderClicked" VerticalOptions="Center">
                    <ImageButton.Source>
                        <FontImageSource Glyph="&#xE145;" Size="Title"  FontFamily="MaterialIconsRegular" Color="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}"/>
                    </ImageButton.Source>
                </ImageButton>-->
            </Grid>
        </FlexLayout>
        <Grid x:Name="LengthInput" Grid.Row="1" Grid.ColumnSpan="2" ColumnSpacing="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Label Text="{x:Static prop:Resources.Password_Length}" FontSize="Subtitle" VerticalOptions="Center"/>
            <Entry Grid.Column="1" Keyboard="Numeric" Text="{Binding LengthText,Mode=TwoWay}" ClearButtonVisibility="WhileEditing"></Entry>
            <Stepper Grid.Column="2" Value="{Binding Length,Mode=TwoWay}"
                     Minimum="{Binding LengthMin,Mode=OneTime}" Maximum="{Binding LengthMax,Mode=OneTime}"></Stepper>
        </Grid>

        <Border x:Name="SymbolBorder" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="2" VerticalOptions="Start"
                Margin="-8" Padding="8"
                Background="{AppThemeBinding Light={StaticResource Gray100Brush}, Dark={StaticResource Gray900Brush}}"
                IsVisible="False" v:PasswordPage.IsShown="False"
                ZIndex="100" >
            <Border.Triggers>
                <Trigger Property="v:PasswordPage.IsShown" Value="True"
                             TargetType="{x:Type Border}">
                    <Trigger.EnterActions>
                        <v:FadeTriggerAction IsEnter="True" Length="200" Diff="-16"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <v:FadeTriggerAction IsEnter="False" Length="200" Diff="-16"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Border.Triggers>
            <Border.Shadow>
                <Shadow Brush="Black" Offset="20,20" Radius="40" Opacity="0.8"/>
            </Border.Shadow>
            <Border.StrokeShape>
                <RoundRectangle CornerRadius="16"/>
            </Border.StrokeShape>
            <ScrollView>
                <FlexLayout Padding="-8,-16,-8,4" Wrap="Wrap" 
                    BindableLayout.ItemsSource="{Binding ChSymbol.Flags}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="vm:ICharacterFlag">
                            <local:LabeledCheckBox
                                StyleClass="Flex,Narrow" Label="{Binding Title,Mode=OneWay}"
                                IsChecked="{Binding Flag}"/>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </ScrollView>
        </Border>
        <Grid x:Name="RoleButtons" Grid.Row="2" Grid.ColumnSpan="2" ColumnSpacing="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button FontSize="Subtitle" Text="{x:Static prop:Resources.Password_Generate}" Command="{Binding RollCommand}" VerticalOptions="Center"/>
            <Button Grid.Column="1" Style="{StaticResource SecondaryButton}" Command="{Binding VisibilityCommand}" VerticalOptions="Center"
                    Text="&#xE8F4;" FontFamily="MaterialIconsRegular"
                    FontSize="Title" Padding="-22"/>
            <Button Grid.Column="2" Style="{StaticResource SecondaryButton}" Command="{Binding DeleteCommand}" VerticalOptions="Center"
                    Text="&#xEA4C;" FontFamily="MaterialIconsRegular"
                    FontSize="Title" Padding="-22"/>
        </Grid>

        <Border Grid.Row="3" Grid.ColumnSpan="2">
            <CollectionView ItemsSource="{Binding Results}" SelectionMode="None"
                            ItemsUpdatingScrollMode="KeepLastItemInView" VerticalScrollBarVisibility="Always">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Text="{Binding Key}" FontSize="Large"
                                   VerticalOptions="Center"/>
                            <Entry Grid.Column="1" Text="{Binding Value,Mode=OneWay}" FontSize="Large"
                                   HorizontalOptions="FillAndExpand" IsReadOnly="True"
                                   VerticalOptions="Center" IsPassword="{Binding IsPassword,Source={x:Reference viewModel}}">
                                <Entry.GestureRecognizers>
                                    <TapGestureRecognizer Buttons="Primary" Tapped="OnOutputEntryTapped" />
                                </Entry.GestureRecognizers>
                            </Entry>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Border>



    </Grid>
</ContentPage>