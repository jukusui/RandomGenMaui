<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Jukusui.RandomGen.View.PasswordPage"
             xmlns:local="clr-namespace:Jukusui.RandomGen.View.Control"
             xmlns:view="clr-namespace:Jukusui.RandomGen.View"
             xmlns:vm="clr-namespace:Jukusui.RandomGen.ViewModel"
             Title="PasswordPage">

    <ContentPage.BindingContext>
        <vm:PasswordViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <Style TargetType="local:LabeledCheckBox" Class="Flex">
            <Setter Property="Margin" Value="4,8,4,4"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style TargetType="local:LabeledCheckBox" Class="Wide">
            <Setter Property="WidthRequest" Value="160"/>
        </Style>
        <Style TargetType="local:LabeledCheckBox" Class="Narrow">
            <Setter Property="WidthRequest" Value="72"/>
        </Style>
    </ContentPage.Resources>
    <Grid VerticalOptions="Fill" Margin="16" RowSpacing="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <FlexLayout Padding="-8,-16,-8,4" Wrap="Wrap">
            <local:LabeledCheckBox StyleClass="Flex,Wide" Label="{Binding ChUpper.Title}" IsChecked="{Binding ChUpper.Flag}"/>
            <local:LabeledCheckBox StyleClass="Flex,Wide" Label="{Binding ChLower.Title}" IsChecked="{Binding ChLower.Flag}"/>
            <local:LabeledCheckBox StyleClass="Flex,Wide" Label="{Binding ChNumber.Title}" IsChecked="{Binding ChNumber.Flag}"/>
        </FlexLayout>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <local:LabeledCheckBox StyleClass="Wide" Label="{Binding ChSymbol.Title}" HorizontalOptions="Start"
                               IsChecked="{Binding ChSymbol.Flag}"/>
            <ImageButton Grid.Column="1" Clicked="OnSymbolBorderClicked">
                <ImageButton.Source>
                    <FontImageSource Glyph="+"/>
                </ImageButton.Source>
            </ImageButton>
        </Grid>
        <Grid Grid.Row="3" ColumnSpacing="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Entry Grid.Row="1" Keyboard="Numeric" Text="{Binding LengthText,Mode=TwoWay}" ClearButtonVisibility="WhileEditing"></Entry>
            <Stepper Grid.Row="1" Grid.Column="1" Value="{Binding Length,Mode=TwoWay}"
                     Minimum="{Binding LengthMin,Mode=OneTime}" Maximum="{Binding LengthMax,Mode=OneTime}"></Stepper>
        </Grid>

        <Border x:Name="SymbolBorder" Grid.Row="2" Grid.RowSpan="7" VerticalOptions="Start"
                Margin="-8" Padding="8"
                Background="{AppThemeBinding Light={StaticResource Gray100Brush}, Dark={StaticResource Gray900Brush}}"
                IsVisible="False" view:PasswordPage.IsShown="False"
                ZIndex="100" >
            <Border.Triggers>
                <Trigger Property="view:PasswordPage.IsShown" Value="True"
                             TargetType="{x:Type Border}">
                    <Trigger.EnterActions>
                        <view:FadeTriggerAction IsEnter="True" Length="200" Diff="-16"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <view:FadeTriggerAction IsEnter="False" Length="200" Diff="-16"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Border.Triggers>
            <Border.Shadow>
                <Shadow Brush="Black" Offset="20,20" Radius="40" Opacity="0.8"/>
            </Border.Shadow>
            <Border.StrokeShape>
                <RoundRectangle CornerRadius="16"/>
            </Border.StrokeShape>
            <ScrollView>
                <FlexLayout Padding="-8,-16,-8,4" Wrap="Wrap" 
                    BindableLayout.ItemsSource="{Binding ChSymbol.Flags}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="vm:ICharacterFlag">
                            <local:LabeledCheckBox
                                StyleClass="Flex,Narrow" Label="{Binding Title,Mode=OneWay}"
                                IsChecked="{Binding Flag}"/>
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </FlexLayout>
            </ScrollView>
        </Border>
        <Button Grid.Row="4" Text="Roll" Command="{Binding RollCommand}"/>

        <Border Grid.Row="5">
            <CollectionView ItemsSource="{Binding Results}" SelectionMode="None"
                            ItemsUpdatingScrollMode="KeepLastItemInView" VerticalScrollBarVisibility="Always">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Text="{Binding Key}" FontSize="Large"
                                   VerticalOptions="Center"/>
                            <Entry Grid.Column="1" Text="{Binding Value,Mode=OneWay}" FontSize="Large"
                                   HorizontalOptions="FillAndExpand" IsReadOnly="True"
                                   VerticalOptions="Center">
                                <Entry.GestureRecognizers>
                                <TapGestureRecognizer Buttons="Primary" Tapped="OnOutputEntryTapped" />
                                </Entry.GestureRecognizers>
                            </Entry>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Border>



    </Grid>
</ContentPage>